name: Deploy to AWS

on:
  push:
    branches:
      - test 

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v2

      - name: Login en Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Construir y subir imagen a Docker Hub
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/edit_user_microservice_image:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/edit_user_microservice_image:latest

      - name: Conectar a AWS EC2 y desplegar
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_INSTANCE_1}}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY}}
          script: |
            echo "🚀 Iniciando despliegue en AWS EC2..."

            # Verificar si Docker está instalado, y si no, instalarlo
            if ! command -v docker &> /dev/null
            then
                echo "🐳 Docker no está instalado. Instalándolo..."
                sudo yum install -y docker
                sudo service docker start
                sudo usermod -aG docker $USER
            fi

            # Asegurar que Docker está corriendo
            sudo systemctl enable docker
            sudo systemctl start docker

            # Detener y eliminar el contenedor si ya existe
            if sudo docker ps -a --format '{{.Names}}' | grep -q edit_user_microservice_container; then
              echo "🛑 Deteniendo y eliminando contenedor existente..."
              sudo docker stop edit_user_microservice_container || true
              sudo docker rm edit_user_microservice_container || true
            fi

            # Remover imágenes antiguas para evitar acumulación
            echo "🧹 Limpiando imágenes antiguas..."
            sudo docker image prune -af || true

            # Descargar la última versión de la imagen desde Docker Hub
            echo "📥 Descargando nueva imagen..."
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/edit_user_microservice_image:latest

            # Ejecutar el nuevo contenedor con las variables de entorno
            echo "🚀 Ejecutando nuevo contenedor..."
            sudo docker run -d --name edit_user_microservice_container \
              --env DB_USER=${{ secrets.DB_USER}} \
              --env DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
              --env DB_SERVER=${{ secrets.DB_HOST}} \
              --env DB_NAME=${{ secrets.DB_NAME}} \
              -p 5001:5001 \
              ${{ secrets.DOCKER_USERNAME }}/edit_user_microservice_image:latest

            echo "✅ Despliegue completado con éxito."
